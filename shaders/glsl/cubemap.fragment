#version 300 es
#pragma optimize(on)

precision highp float;

#include "shaderfunction.lin"

uniform mat4 WORLDVIEWPROJ;
uniform mat4 WORLD;
uniform mat4 WORLDVIEW;
uniform mat4 PROJ;
uniform vec4 CHUNK_ORIGIN_AND_SCALE;
uniform vec4 FOG_COLOR;
uniform vec2 FOG_CONTROL;
uniform float TOTAL_REAL_WORLD_TIME;
uniform sampler2D TEXTURE_0;

flat in vec3 M_sky_0;
flat in vec3 M_sky_1;
flat in vec3 M_sky_2;

flat in vec3 campos;
flat in vec3 clocampos;
flat in vec3 L;
flat in vec3 orisunlig;
flat in vec3 closunlig;
flat in vec3 closkylum;
centroid in vec2 uv;
in vec4 skypos;

out vec4 FragColor;

void main()
{
	vec4 outcol = vec4(1.0);

	vec3 skyvec = normalize(skypos.xyz);

	vec3 skylig = vec3(0.0);

	vec4 thr = texelFetch(TEXTURE_0, (ivec2(gl_FragCoord.xy) + 2400) % 256, 0);

	if (orisunlig.r < 1.0) //night
	{
		mat3 M_sky;
		M_sky[0] = M_sky_0;
		M_sky[1] = M_sky_1;
		M_sky[2] = M_sky_2;

		const mat3 M_mkw_x = mat3(
			vec3(1.0, 0.0, 0.0),
			vec3(0.0, cos(MILKY_WAY_DEC_X), sin(MILKY_WAY_DEC_X)),
			vec3(0.0, -sin(MILKY_WAY_DEC_X), cos(MILKY_WAY_DEC_X)));

		const mat3 M_mkw_y = mat3(
			vec3(cos(MILKY_WAY_DEC_Y), 0.0, sin(MILKY_WAY_DEC_Y)),
			vec3(0.0, 1.0, 0.0),
			vec3(-sin(MILKY_WAY_DEC_Y), 0.0, cos(MILKY_WAY_DEC_Y)));

		const mat3 M_mkw_z = mat3(
			vec3(cos(MILKY_WAY_DEC_Z), sin(MILKY_WAY_DEC_Z), 0.0),
			vec3(-sin(MILKY_WAY_DEC_Z), cos(MILKY_WAY_DEC_Z), 0.0),
			vec3(0.0, 0.0, 1.0));

		mat3 M_mkw = M_mkw_z * M_mkw_y * M_mkw_x;

		M_sky = M_sky * M_mkw;

		vec3 mkwvec = transpose(M_sky) * skyvec;

		vec2 skyvec_halfx = normalize(vec2(1.0, 0.0) + normalize(mkwvec.xz));
		vec2 skyuv = vec2(1.0 / MATH_PI, 0.5 / MATH_PI);
		skyuv *= acos(vec2(skyvec_halfx.y, mkwvec.y));

		vec4 skytex = texture(TEXTURE_0, skyuv);
		skylig = gamma2line(skytex.rgb) * MILKY_WAY_LIGHT;
		float maxrgb = max(max(skytex.r, skytex.g), skytex.b);
		skylig *= 1.0 + pow4(maxrgb) * STAR_LIGHT;
	}

	skylig = physicsun(skylig, orisunlig, L, skyvec, SUN_R);

	skylig = skyrender(skylig, campos, skyvec, orisunlig, closunlig, closkylum, L, thr, TOTAL_REAL_WORLD_TIME);

	outcol.rgb = lig2col(skylig);

	FragColor = outcol;
}
